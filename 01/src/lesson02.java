import java.util.Random;
import java.util.Scanner;

/**
 * домашнее задание по второму занятию
 */


public class lesson02 {

    public static void main(String[] args) {

        //=======================УСЛОВНЫЙ ОПЕРАТОР==============================
        /*2) Создать программу, выводящую на экран ближайшее к 10 из двух чисел, записанных в переменные m и n.
        Например, среди чисел 8,5 и 11,45 ближайшее к десяти 11,45.*/
        Scanner scanner = new Scanner(System.in);
        Double m = scanner.nextDouble();
        Double n = scanner.nextDouble();
        if (Math.abs(m - 10) < Math.abs(n - 10))
            System.out.println("ближайшее к 10 из двух чисел: " + m);
        else
            System.out.println("ближайшее к 10 из двух чисел: " + n);
        System.out.println("------------------------");


        //=======================ВЕТВЛЕНИЕ В ПРОГРАММЕ==============================

        /*1) Создать программу, которая будет проверять попало ли случайно выбранное из отрезка [5;155] целое число
        в интервал (25;100) и сообщать результат на экран. 
        Примеры работы программы: 
        Число 113 не содержится в интервале (25,100) Число 72 содержится в интервале (25,100) 
        Число 25 не содержится в интервале (25,100) Число 155 не содержится в интервале (25,100)*/
        Random random = new Random();
        for (int i = 0; i < 4; i++) {
            Integer num = random.nextInt(151) + 5;
            if (num > 25 && num < 100)
                System.out.println("Число " + num + " содержится в интервале (25,100)");
            else
                System.out.println("Число " + num + " НЕ содержится в интервале (25,100)");
        }
        System.out.println("------------------------");


        /*2) Создать программу, выводящую на экран случайно сгенерированное трёхзначное натуральное число и его наибольшую цифру. 
        Примеры работы программы:  В числе 208 наибольшая цифра 8 В числе 774 наибольшая цифра 7 В числе 613 наибольшая цифра 6*/
        for (int i = 0; i < 4; i++) {
            Integer num = random.nextInt(900) + 100;
            System.out.println("В числе " + num + " наибольшая цифра " + Math.max(Math.max(num / 100, num / 10 % 10), Math.max(num / 100, num % 10 % 10)));
        }
        System.out.println("------------------------");


        /*3) В три переменные a, b и c явно записаны программистом три целых попарно неравных между собой числа.
        Создать программу, которая переставит числа в переменных таким образом,
        чтобы при выводе на экран последовательность a, b и c оказалась строго возрастающей. 
        Числа в переменных a, b и c: 3, 9, -1
        Возрастающая последовательность: -1, 3, 9*/
        Integer a = 3;
        Integer b = 9;
        Integer c = -1;
        System.out.println("Числа в переменных: " + a + ", " + b + ", " + c);
        if (Math.min(a, b) < Math.min(a, c)) {
            a = a + b;
            b = a - b;
            a = a - b;
        }
        if (Math.min(a, b) > Math.min(a, c)) {
            a = a + c;
            c = a - c;
            a = a - c;
        }
        if (Math.min(a, b) == Math.min(a, c)) {
            if (b > c) {
                b = b + c;
                c = b - c;
                b = b - c;
            }
        }
        System.out.println("Возрастающая последовательность: " + a + ", " + b + ", " + c);
        System.out.println("------------------------");

        /*4) На некотором предприятии инженер Петров создал устройство, на табло которого показывается количество секунд,
        оставшихся до конца рабочего дня. Когда рабочий день начинается ровно в 9 часов утра — табло отображает «28800»
        (т.е. остаётся 8 часов), когда времени 14:30 — на табло «9000» (т.е. остаётся два с половиной часа),
        а когда наступает 17 часов — на табло отображается «0» (т.е. рабочий день закончился). 
        Программист Иванов заметил, как страдают офисные сотрудницы — им неудобно оценивать остаток рабочего дня в секундах.
        Иванов вызвался помочь сотрудницам и написать программу, которая вместо секунд будет выводить на табло понятные фразы
        с информацией о том, сколько полных часов осталось до конца рабочего дня.
        Например: «осталось 7 часов», «осталось 4 часа», «остался 1 час», «осталось менее часа». 
        Итак, в переменную n должно записываться случайное (на время тестирования программы) целое число из [0;28800],
        далее оно должно выводиться на экран (для Петрова) и на следующей строке (для сотрудниц) должна выводиться фраза
        о количестве полных часов, содержащихся в n секундах. 
        Примеры работы программы:
         23466
        Осталось 6 часов */
        for (int i = 0; i < 4; i++) {
            Integer seconds = random.nextInt(28801);
            System.out.println(seconds);
            Integer hours = seconds / 3600;
            if (seconds / 3600 > 4)
                System.out.println("Осталось " + hours + " часов");
            else {
                switch (hours) {
                    case 0:
                        System.out.println("Осталось меньше часа");
                        break;
                    case 1:
                        System.out.println("Остался 1 час");
                        break;
                    default:
                        System.out.println("Осталось " + hours + " часа");
                }
            }
        }
        System.out.println("------------------------");

        //=======================ЦИКЛЫ В JAVA==============================
        /*1) Создайте программу, выводящую на экран все четырёхзначные числа последовательности 1000 1003 1006 1009 1012 1015 …*/
        for (int i = 1000; i < 10000; i = i + 3)
            System.out.print(i + " ");
        System.out.println();
        System.out.println("------------------------");

        /*2) Создайте программу, выводящую на экран первые 55 элементов последовательности 1 3 5 7 9 11 13 15 17 ….*/
        for (int i = 0; i < 55; i++)
            System.out.print((1 + 2 * i) + " ");
        System.out.println();
        System.out.println("------------------------");

        /*3) Создайте программу, выводящую на экран все неотрицательные элементы последовательности 90 85 80 75 70 65 60 ….*/
        a = 90;
        while (a >= 0) {
            System.out.print(a + " ");
            a = a - 5;
        }
        System.out.println();
        System.out.println("------------------------");

        /*4) Создайте программу, выводящую на экран первые 20 элементов последовательности 2 4 8 16 32 64 128 ….*/
        for (int i = 1; i <= 20; i++)
            System.out.print((int) Math.pow(2, i) + " ");
        System.out.println();
        System.out.println("------------------------");

        /*5) Создайте программу, вычисляющую факториал натурального числа n, которое пользователь введёт с клавиатуры.*/
        a = scanner.nextInt();
        b = 1;
        for (int i = 1; i <= a; i++) {
            b = b * i;
        }
        System.out.println("Факториал числа " + a + " равен: " + b);
        System.out.println("------------------------");

        /*6) Выведите на экран все положительные делители натурального числа, введённого пользователем с клавиатуры.*/
        a = scanner.nextInt();
        System.out.print("Положительные делители натурального числа " + a + ": ");
        for (int i = 1; i <= a / 2; i++)
            if (a % i == 0) System.out.print(i + " ");
        System.out.print(a);
        System.out.println();
        System.out.println("------------------------");

        /*7) Проверьте, является ли введённое пользователем с клавиатуры натуральное число — простым.
        Постарайтесь не выполнять лишних действий (например, после того, как вы нашли хотя бы один нетривиальный делитель уже ясно,
        что число составное и проверку продолжать не нужно). Также учтите, что наименьший делитель натурального числа n,
        если он вообще имеется, обязательно располагается в отрезке [2; √n].*/
        a = scanner.nextInt();
        Boolean f = true;
        for (int i = 2; i <= Math.sqrt(a); i++)
            if (a % i == 0) {
                f = false;
                break;
            }
        if (f)
            System.out.println("Число простое");
        else
            System.out.println("Число НЕ простое");
        System.out.println("------------------------");

        /*8) Выведите на экран первые 11 членов последовательности Фибоначчи.
        Напоминаем, что первый и второй члены последовательности равны единицам, а каждый следующий — сумме двух предыдущих.*/
        System.out.print("11 членов последовательности Фибоначчи: 1 1 ");
        a = 1;
        b = 2;
        for (int i = 0; i < 9; i++) {
            System.out.print(b + " ");
            b = b + a;
            a = b - a;
        }
        System.out.println();
        System.out.println("------------------------");

        /*9) Для введённого пользователем с клавиатуры натурального числа посчитайте сумму всех его цифр
        (заранее не известно сколько цифр будет в числе).*/
        String s=scanner.next();
        System.out.println("Сумма всех цифр числа " + s + " равна:" + sum(Integer.parseInt(s)));
        System.out.println("------------------------");

        /*10) В городе N проезд в трамвае осуществляется по бумажным отрывным билетам.
        Каждую неделю трамвайное депо заказывает в местной типографии рулон билетов с номерами от 000001 до 999999.
        «Счастливым» считается билетик у которого сумма первых трёх цифр номера равна сумме последних трёх цифр, как,
        например, в билетах с номерами 003102 или 567576. Трамвайное депо решило подарить сувенир обладателю каждого
        счастливого билета и теперь раздумывает, как много сувениров потребуется.
        С помощью программы подсчитайте сколько счастливых билетов в одном рулоне?*/
        a = 0;
        System.out.print("Счастливые билеты: ");
        for (int i = 1; i < 1000; i++) {
            b = sum(i);
            for (int j = 1; j < 1000; j++)
                if (b == sum(j)) {
                    System.out.print(numNormalizer(i) + numNormalizer(j) + " ");
                    a++;
                }
        }
        System.out.println();
        System.out.println("Общее кол-во счастливых билетов: " + a);
        System.out.println("------------------------");
    }


    //подсчет суммы всех цифр числа
    public static Integer sum(Integer num) {
        String s = Integer.toString(num);
        num = 0;
        for (int i = 0; i < s.length(); i++)
            num = Integer.parseInt(s.substring(i, i + 1)) + num;
        return num;
    }

    //функция добавления ведущих нолей к числу
    public static String numNormalizer(Integer num) {
        switch (Integer.toString(num).length()) {
            case 1:
                return "00" + num;
            case 2:
                return "0" + num;
            default:
                return "" + num;
        }
    }

}



